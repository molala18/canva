---
- name: Deploy the app on the servers
  hosts: appservers
  become: true
  vars:
    repo_url: https://github.com/molala18/canva.git
    app_dir: /opt/canva

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install git
      apt:
        name: git
        state: present

    - name: Install Docker
      apt:
        name:
          - docker.io
        state: present
        update_cache: yes

    - name: Install docker-compose
      apt:
        name: docker-compose
        state: present

    - name: Add current user to docker group
      user:
        name: root
        groups: docker
        append: yes

    - name: Ensure app directory exists
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'

    - name: Clone the repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        version: master
        force: yes
      register: git_result

    - name: Debug git clone result
      debug:
        var: git_result

    - name: Check if docker-compose.yml exists
      stat:
        path: "{{ app_dir }}/docker-compose.yml"
      register: compose_file

    - name: Show if compose file exists
      debug:
        msg: "docker-compose.yml exists: {{ compose_file.stat.exists }}"

    - name: Create .env file with server ID to see in browser lala
      copy:
        content: "SERVER_ID={{ hostvars[inventory_hostname]['server_id'] }}"
        dest: "{{ app_dir }}/.env"

    - name: Build and start the app
      command: docker-compose up -d --build
      args:
        chdir: "{{ app_dir }}"

    - name: Show running containers
      command: docker ps
      register: docker_ps

    - name: Display running containers
      debug:
        var: docker_ps.stdout_lines

- name: Configure Nginx as a reverse proxy
  hosts: loadbalancer
  become: true

  tasks:
    - name: Install Nginx inshallah
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Configure Nginx
      copy:
        dest: /etc/nginx/sites-available/canva.conf
        content: |
          upstream backend {
          {% for server in upstream_servers %}
              server {{ server.host }}:{{ server.port }};
          {% endfor %}
          }

          # Redirect HTTP to HTTPS
          server {
              listen 80;
              server_name mohamedlala.online;
              return 301 https://$host$request_uri;
          }

          server {
              listen 443 ssl;
              server_name mohamedlala.online;

              ssl_certificate /etc/letsencrypt/live/mohamedlala.online/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/mohamedlala.online/privkey.pem;

              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_prefer_server_ciphers on;
              ssl_ciphers HIGH:!aNULL:!MD5;

              location / {
                  proxy_pass http://backend;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_cache_bypass $http_upgrade;
              }
          }

    - name: Enable the Nginx configuration
      file:
        src: /etc/nginx/sites-available/canva.conf
        dest: /etc/nginx/sites-enabled/canva.conf
        state: link
        force: yes

    - name: Remove default site if exists
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test Nginx configuration
      command: nginx -t
